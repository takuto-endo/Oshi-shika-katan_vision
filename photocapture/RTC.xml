<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rtc:RtcProfile rtc:version="0.2" rtc:id="RTC:Endo Takuto:ImageProcessiong:PhotoCapture:1.0.0" xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <rtc:BasicInfo xsi:type="rtcExt:basic_info_ext" rtcExt:saveProject="PhotoCapture" rtc:updateDate="2022-01-19T03:21:08.399+09:00" rtc:creationDate="2021-12-04T00:36:02+09:00" rtc:abstract="PhotoCapture is a component that constantly receives Camera frames, and when a specific key (set to &quot;9&quot;) is input, it acquires the frame as an image and outputs it to another component." rtc:version="1.0.0" rtc:vendor="Endo Takuto" rtc:maxInstances="1" rtc:executionType="PeriodicExecutionContext" rtc:executionRate="1000.0" rtc:description="ModuleDescription" rtc:category="ImageProcessiong" rtc:componentKind="DataFlowComponent" rtc:activityType="PERIODIC" rtc:componentType="STATIC" rtc:name="PhotoCapture">
        <rtcDoc:Doc rtcDoc:reference="" rtcDoc:license="" rtcDoc:creator="" rtcDoc:algorithm="" rtcDoc:inout="" rtcDoc:description="PhotoCapture is a component that constantly receives Camera frames, and when a specific key (set to &quot;9&quot;) is input, it acquires the frame as an image and outputs it to another component."/>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
    </rtc:BasicInfo>
    <rtc:Actions>
        <rtc:OnInitialize xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnFinalize xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnStartup xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnShutdown xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnActivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnDeactivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAborting xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnError xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnReset xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnExecute xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnStateUpdate xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnRateChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAction xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnModeChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
    </rtc:Actions>
    <rtc:ConfigurationSet>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="" rtc:unit="" rtc:defaultValue="3" rtc:type="int" rtc:name="delay">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:propertyIsBetween>
                        <rtc:LowerBoundary>0</rtc:LowerBoundary>
                        <rtc:UpperBoundary>10</rtc:UpperBoundary>
                    </rtc:propertyIsBetween>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="The time difference between the signal to acquire an image and the actual acquisition of the image. It is equivalent to the &quot;timer&quot; of a standard camera." rtcDoc:defaultValue="" rtcDoc:dataname=""/>
            <rtcExt:Properties rtcExt:value="spin.1" rtcExt:name="__widget__"/>
        </rtc:Configuration>
    </rtc:ConfigurationSet>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="in_image" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="&lt;RTM_ROOT&gt;\rtm\idl\InterfaceDataTypes.idl" rtc:type="RTC::CameraImage" rtc:name="in_image" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="" rtcDoc:number="" rtcDoc:type="" rtcDoc:description="Frames sent by the camera&lt;br/&gt;(e.g., input source &quot;OpenCVCamera&quot;, &quot;MFCamera&quot;, etc.)"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="button" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="&lt;RTM_ROOT&gt;\rtm\idl\BasicDataType.idl" rtc:type="RTC::TimedLong" rtc:name="button" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="if &quot;q&quot; is passed from the standard input, output the image." rtcDoc:number="" rtcDoc:type="" rtcDoc:description=""/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="out_image" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="&lt;RTM_ROOT&gt;\rtm\idl\InterfaceDataTypes.idl" rtc:type="RTC::CameraImage" rtc:name="out_image" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="" rtcDoc:number="" rtcDoc:type="" rtcDoc:description="Acquired image"/>
    </rtc:DataPorts>
    <rtc:Language xsi:type="rtcExt:language_ext" rtc:kind="Python"/>
</rtc:RtcProfile>
